package com.erudex.selenium.pages.common;

import java.util.Scanner;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class PopUpPage {
	private ChromeDriver driver;
	
//	@FindBy(css = ".ng-binding")
//	private WebElement messageElement;
	
	@FindBy(xpath = "//p[@ng-bind-html='message' and contains(@class, 'ng-binding')]")
	private WebElement messageElement;

	@FindBy(css = "div.button.alert.radius[ng-click='negativeResponse()']")
    private WebElement noButton;

    @FindBy(css = "div.button.success.radius[ng-click='positiveResponse()']")
    private WebElement yesButton;
    
    private String pageLoadedText = "You are already logged in elsewhere. Do you want to login here instead? (Other session will be logged out)";
    
    private int timeout = 10;
    
    private String pageUrl = "https://app.erudex.com/login";
    
    public PopUpPage(ChromeDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

//	public boolean checkAlreadyLoggedin() {
//        boolean present = false;
//        try {
//            String msg = "You are already logged in elsewhere.<br>Do you want to login here instead?";
//            WebElement paragraph = driver.findElement(By.cssSelector(".ng-binding"));
//            String paragraphText = paragraph.getText();
//            System.out.println("Paragraph text: " + paragraphText);
//            if (paragraphText.equals(msg)) {
//                present = true;
//            }
//        } catch (NoSuchElementException e) {
//            System.out.println("Paragraph not found.");
//        }
//        WebDriverWait wait = new WebDriverWait(driver, timeout);
//
//        try {
//            // Try to find and click the "No" button
//        	WebElement noButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".button.alert.radius")));
//            present = true;
//        } catch (NoSuchElementException e) {
//            System.out.println("No button not found.");
//            present = false;
//        }
//
//        try {
//            // Try to find and click the "Yes" button
//        	WebElement yesButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".button.success.radius")));
//            //WebElement yesButton = driver.findElement(By.cssSelector(".button.success.radius"));
//            yesButton.click();
//            present = true;
//        } catch (NoSuchElementException e) {
//            present = false;
//            System.out.println("Yes button not found.");
//        }
//
//        return present;
//    }
//    public boolean isPopUpDisplayed() {
//        try {
//        	WebDriverWait wait = new WebDriverWait(driver, timeout);
//        	
//            //WebElement popUpElement = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".text-center")));
//            //WebElement popUpElement = driver.findElement(By.cssSelector(".text-center"));
//            WebElement messageElement = driver.findElement(By.className("ng-binding"));
//
//            System.out.println("&&&&&&&&&&&&&&&&&");
//            System.out.println("&&&&&&&&&&&&&&&&&");
//            System.out.println("&&&&&&&&&&&&&&&&&");
//            System.out.println(messageElement);
//            System.out.println(messageElement.isDisplayed());
//            return messageElement.isDisplayed();
//        } catch (NoSuchElementException e) {
//            return false;
//        }
//    }
    private boolean isClickedNo = false;
    public boolean clickNoButton() {
        System.out.println("@#$%^@#$%@#$%");
        boolean isButtonClicked = false;
        try {
            if (!isClickedNo) {
            	System.out.println("hereherehere");
                WebDriverWait wait = new WebDriverWait(driver, timeout);
                WebElement noButtonElement = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("div.button.alert.radius[ng-click='negativeResponse()']")));
                noButtonElement.click();
                isClickedNo = true;
                System.out.println("QQQQQQQQQQQQQQQQQQQ");
                System.out.println();
                isButtonClicked = true;
            } else {
                System.out.println("No button has already been clicked.");
            }
        } catch (NoSuchElementException e) {
            // No button element is no longer present on the page
            System.out.println("No button is no longer present.");
        } finally {
            System.out.println("`````````````````````````````````````````````````````````");
        }
        return isButtonClicked;
    }




//    public void clickNoButton() {
//        WebDriverWait wait = new WebDriverWait(driver, timeout);
//        WebElement noButtonElement = wait.until(ExpectedConditions.elementToBeClickable(noButton));
//        noButtonElement.click();
//    }

//    public boolean clickYesButton() {
//    	System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
//        try {
//            WebDriverWait wait = new WebDriverWait(driver, timeout);
//            WebElement yesButtonElement = wait.until(ExpectedConditions.elementToBeClickable(yesButton));
//            yesButtonElement.click();
//
//            boolean isClicked = isElementClicked(yesButtonElement);
//            System.out.println(isClicked);
//            return isClicked;
//        } catch (NoSuchElementException e) {
//            // Button element is no longer present on the page
//            System.out.println("Yes button is no longer present.");
//            return false;
//        } finally {
//            System.out.println("############################################################");
//        }
//////        WebDriverWait wait = new WebDriverWait(driver, timeout);
//////        WebElement yesButtonElement = wait.until(ExpectedConditions.elementToBeClickable(yesButton));
//////        yesButtonElement.click();
////    	System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
////        WebDriverWait wait = new WebDriverWait(driver, timeout);
////        WebElement yesButtonElement = wait.until(ExpectedConditions.elementToBeClickable(yesButton));
////        boolean isClicked;
////        try {
////            yesButtonElement.click();
////            isClicked = isElementClicked(yesButtonElement);
////            System.out.println(isClicked);
////        } catch (NoSuchElementException e) {
////            // Button element is no longer present on the page
////            System.out.println("Yes button is no longer present.");
////            return false;
////        }
////        //yesButtonElement.click();
////        System.out.println("############################################################");
////
////        // Verification step
////        
////        return isClicked;
////       
//        
//    }
//    public boolean isElementClicked(WebElement element) {
//        try {
//            // Check if the element is still clickable after the click operation
//            return element.isEnabled();
//        } catch (Exception e) {
//            return false;
//        }
//    }
    
    private static boolean isClicked = false;

    public boolean clickYesButton() {
        
        try {
            if (!isClickedNo && !isClicked) {
            	System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                WebDriverWait wait = new WebDriverWait(driver, timeout);
                WebElement yesButtonElement = wait.until(ExpectedConditions.elementToBeClickable(yesButton));
                yesButtonElement.click();

                isClicked = true;

                boolean isButtonClicked = isElementClicked(yesButtonElement);
                System.out.println(isButtonClicked);
                System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                return isButtonClicked;
            } else {
                System.out.println("Yes button has already been clicked.");
                return false;
            }
        } catch (NoSuchElementException e) {
            // Button element is no longer present on the page
            System.out.println("Yes button is no longer present.");
            return false;
        } finally {
            System.out.println("############################################################");
        }
    }

    public boolean isElementClicked(WebElement element) {
        try {
            // Check if the element is still clickable after the click operation
            return element.isEnabled();
        } catch (Exception e) {
            return false;
        }
    }
    
    
   

    public boolean checkAlreadyLoggedIn() {
        boolean present = false;
        try {
            String expectedMessage = "You are already logged in elsewhere. Do you want to login here instead? (Other session will be logged out)";
            WebDriverWait wait = new WebDriverWait(driver, timeout);
            WebElement paragraph = wait.until(ExpectedConditions.visibilityOf(messageElement));
            //System.out.println(paragraph.getText());
            
            //WebElement messageElement = driver.findElement(By.cssSelector(".ng-binding"));
            String messageText = messageElement.getText();
            //WebElement paragraphi = driver.findElement(By.cssSelector(".ng-binding"));
            String paragraphText = paragraph.getText();
            System.out.println("kunkyunkyun");
            System.out.println(paragraphText);
            System.out.println("messagebelow");
            System.out.println(messageText);
            System.out.println(expectedMessage);
            //System.out.println("paragraphText: " + paragraphText);
//            
            if (paragraphText.contains("login")) {
            	System.out.println("OOOOOOOOOOOOOOOOOOOOO");
                present = true;
            }
            
//            if (paragraphText.trim().contains(expectedMessage.trim())) {
//            	System.out.println("littlelittle");
//                present = true;
//                
//            }
        } catch (NoSuchElementException e) {
            System.out.println("Message not found.");
        }

        return present;
    }
    
//    public void handlePopup() {
//        Scanner scanner = new Scanner(System.in);
//        System.out.println("Popup detected. Do you want to proceed? (Yes/No)");
//        String abortAlreadyLoggedIn = scanner.nextLine().toLowerCase();
//        if (abortAlreadyLoggedIn.equals("yes")) {
//        	System.out.println("yesyesyesyesyesyesyeys");
//            clickYesButton();
//        } else if (abortAlreadyLoggedIn.equals("no")) {
//            clickNoButton();
//        } else {
//            System.out.println("Invalid input. Please try again.");
//        }
//        scanner.close();
//    }
    public boolean handlePopup() throws InterruptedException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Popup detected. Do you want to proceed? (Yes/No)");
        String abortAlreadyLoggedIn = scanner.nextLine().toLowerCase();
        scanner.close();
        
        if (abortAlreadyLoggedIn.equals("yes")) {
            System.out.println("yesyesyesyesyesyesyeys");
            clickYesButton();
            Thread.sleep(3000);
            
            return true;
        } else if (abortAlreadyLoggedIn.equals("no")) {
            clickNoButton();
            return false;
        } else {
            System.out.println("Invalid input. Please try again.");
            return false;
        }
    }
    //In this modified code, the handlePopup() method will return true if the user enters "yes", 
    //false if the user enters "no", and false for any other input. The scanner.close() method is called after reading the user's input to close the scanner properly.







    
    
    
    

}
