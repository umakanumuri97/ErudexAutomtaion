package com.erudex.selenium.pages.login;

import java.io.File;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import com.erudex.selenium.pages.login.LoginPage;



public class Erudex {
    private static ChromeDriver driver = null;
    private static LinkedHashMap<String, String> users = new LinkedHashMap<>();

    public static void main(String[] args) {
    	System.setProperty("webdriver.chrome.driver", "/Users/kanumuriuma/Downloads/chromedriver_mac_arm64/chromedriver");
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36");
        driver = new ChromeDriver(options);

        try {
            readUserDataFromExcel();
            loginUsers();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (driver != null) {
                driver.quit();
            }
        }
    }

    private static void readUserDataFromExcel() throws Exception {
        String excelFilePath = "/Users/kanumuriuma/Downloads/choppedUsers.xlsx";
        FileInputStream inputStream = new FileInputStream(new File(excelFilePath));
        Workbook workbook = new XSSFWorkbook(inputStream);
        Sheet sheet = workbook.getSheetAt(0);

        Iterator<Row> iterator = sheet.iterator();
        while (iterator.hasNext()) {
            Row currentRow = iterator.next();
            Cell usernameCell = currentRow.getCell(0);
            Cell passwordCell = currentRow.getCell(1);

            String username = "";
            String password = "";

            if (usernameCell != null && usernameCell.getCellType() == CellType.STRING) {
                username = usernameCell.getStringCellValue();
            }

            if (passwordCell != null && passwordCell.getCellType() == CellType.STRING) {
                password = passwordCell.getStringCellValue();
            }

            if (!username.isEmpty() && !password.isEmpty()) {
                users.put(username, password);
            }
        }

        workbook.close();
        inputStream.close();
    }
    private static void loginUsers() {
//        for (Map.Entry<String, String> user : users.entrySet()) {
//            String username = user.getKey();
//            String password = user.getValue();
//
//            driver.get("https://app.erudex.com/");
//            //An instance of the LoginPage class is created, passing the driver object as an argument. This initializes the page object and allows interaction with the login page elements.
//            LoginPage loginPage = new LoginPage(driver);
//            //The fill() method is called on the loginPage object, which fills the username and password fields with default values (presumably predefined values, not extracted from the Excel file).
//            //The setUsernameTextField(username) method is called on the loginPage object, which sets the username field to the value of the username variable obtained from the users map.
//            //The setPasswordTextField(password) method is called on the loginPage object, which sets the password field to the value of the password variable obtained from the users map.
//            //The submit() method is called on the loginPage object, which submits the login form.
//            loginPage.fill()
//            .setUsernameTextField(username);
//        loginPage.setPasswordTextField(password);
//        loginPage.submit();
    	for (Map.Entry<String, String> user : users.entrySet()) {
    	    String username = user.getKey();
    	    String password = user.getValue();

    	    driver.get("https://app.erudex.com/");

    	    LoginPage loginPage = new LoginPage(driver);
    	    loginPage.setUsernameTextField("ind.data1");
    	    loginPage.setPasswordTextField("ind.data1");
    	    loginPage.submit();

            WebDriverWait wait = new WebDriverWait(driver, 10);
            try {
                wait.until(new ExpectedCondition<Boolean>() {
                    public Boolean apply(WebDriver driver) {
                        WebElement dashboardElement = driver.findElement(By.xpath("//div[@class='dashboard']"));
                        return dashboardElement != null && dashboardElement.isDisplayed();
                    }
                });

                System.out.println("User '" + username + "' logged in successfully.");
                // Add your assertions or further actions here for successful login
            } catch (NoSuchElementException e) {
                System.out.println("User '" + username + "' failed to log in.");
                // Add your assertions or further actions here for failed login
            }
        }
    }
    private static boolean checkAlreadyLoggedin() {
        boolean present = false;

        try {
            // Find the paragraph element and get its text
            // Message
            WebElement paragraph = driver.findElement(By.cssSelector(".ng-binding"));
            String paragraphText = paragraph.getText();
            System.out.println("Paragraph text: " + paragraphText);

            if (paragraphText.equals("You are already logged in elsewhere.<br>Do you want to login here instead?")) {
                present = true;
                // Click the "Yes" button
                WebElement yesButton = driver.findElement(By.cssSelector(".button.success.radius"));
                yesButton.click();
            }
        } catch (NoSuchElementException e) {
            System.out.println("Paragraph or Yes button not found.");
        }

        return present;
    }


}

